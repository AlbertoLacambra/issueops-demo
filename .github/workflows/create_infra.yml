name: Create Infrastructure with Terraform and Issues 🚀🔧

on:
  issues: 
    types: opened

defaults:
  run:
    working-directory: ./terraform

jobs:
  validate_issue_forms:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Parse Issue
      id: parser
      uses: issue-ops/parser@v4.0.0
      with:
        issue-form-template	: create_azure_infra_form.yml

    - name: Output Issue JSON
      id: output-issue
      run: echo ${{ steps.parser.outputs.json }}



  # check_terraform_plan:

  #   needs: validate_issue_forms

  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4      

  #     - name: Set up Terraform
  #       uses: hashicorp/setup-terraform@v1

  #     - name: Terraform Init
  #       run: | 
  #         terraform init 

  #     - name: Terraform Plan
  #       run: terraform plan

  #     - uses: actions/github-script@v6
  #       if: github.event_name == 'pull_request'
  #       env:
  #         PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
  #       with:
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         script: |
  #           const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
  #           #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
  #           #### Terraform Validation 🤖\`${{ steps.validate.outcome }}\`
  #           <details><summary>Validation Output</summary>
      
  #           \`\`\`\n
  #           ${{ steps.validate.outputs.stdout }}
  #           \`\`\`
      
  #           </details>
      
  #           #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`
            
  #           <details><summary>Show Plan</summary>
            
  #           \`\`\`\n
  #           ${process.env.PLAN}
  #           \`\`\`
            
  #           </details>
            
  #           *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
  #           github.rest.issues.createComment({
  #             issue_number: context.issue.number,
  #             owner: context.repo.owner,
  #             repo: context.repo.repo,
  #             body: output
  #           })    