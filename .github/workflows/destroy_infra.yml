name: Destroy Infrastructure with Terraform 💥🔨

on:
  issues: 
    types: closed

defaults:
  run:
    working-directory: ./terraform

env:
  ARM_SUBSCRIPTION_ID: ${{ secrets.TF_SUBSCRIPTION_ID }}
  ARM_CLIENT_ID: ${{ secrets.TF_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.TF_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.TF_TENANT_ID }}


jobs:
  destroy_terraform_infra:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code 🛎
        uses: actions/checkout@v4

      - name: Set up Terraform 💼
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init 🏗
        id: init
        run: | 
          terraform init \
          -backend-config="resource_group_name=${{ secrets.TF_STATE_RESOURCE_GROUP_NAME }}" \
          -backend-config="storage_account_name=${{ secrets.TF_STATE_AZURE_STORAGE_NAME }}" \
          -backend-config="container_name=${{ secrets.TF_STATE_CONTAINER_NAME }}" \
          -backend-config="key=issue-${{ github.event.issue.number }}-terraform.tfstate" \
          -backend-config="access_key=${{ secrets.TF_STATE_STORAGE_ACCESS_KEY }}"

      - name: Get the resource group name from the Terraform state
        id: get_rg_name
        # run: echo "::set-output name=rg_name::$(terraform output resource_group_name)"
        run: echo "rg_name=$(terraform output resource_group_name)" >> $GITHUB_OUTPUT

      - name: Get the location from the Terraform state
        id: get_location
        # run: echo "::set-output name=location::$(terraform output location)"
        run: echo "location=$(terraform output location)" >> $GITHUB_OUTPUT

      - name: Get storage account name from the Terraform state
        id: get_storage_account_name
        # run: echo "::set-output name=storage_account_name::$(terraform output storage_account_name)"
        run: echo "storage_account_name=$(terraform output storage_account_name)" >> $GITHUB_OUTPUT

      - name: Create a terraform.tfvars file
        run: |
          echo "resource_group_name = \"$(steps.get_rg_name.outputs.rg_name)\"" >> terraform.tfvars
          echo "region = \"$(steps.get_location.outputs.location)\"" >> terraform.tfvars
          echo "storage_account_name = \"$(steps.get_storage_account_name.outputs.storage_account_name)\"" >> terraform.tfvars

      - name: Check the content of the terraform.tfvars file
        run: cat terraform.tfvars

      - name: Terraform Destroy 🧨
        run: terraform destroy -auto-approve -var="subscription_id=${{ secrets.TF_SUBSCRIPTION_ID }}"

      - name: Remove Labels
        id: remove-labels
        uses: issue-ops/labeler@v2.1.0
        with:
          action: remove
          issue_number: ${{ github.event.issue.number }}
          labels: |
            deployed 🚀✅        

      - name: Add Labels
        id: add-labels
        uses: issue-ops/labeler@v2.1.0
        with:
          action: add
          issue_number: ${{ github.event.issue.number }}
          labels: |
            destroyed 🚀🔥
